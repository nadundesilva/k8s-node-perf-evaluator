name: Build

on: [push, pull_request]

permissions: read-all

jobs:
  run-super-linter:
    name: Run GitHub Super Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: super-linter/super-linter@5119dcd8011e92182ce8219d9e9efc82f16fddb6 # v8
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_GO: "false"
          VALIDATE_PYTHON_PYINK: "false"
          VALIDATE_PYTHON_BLACK: "false"
          VALIDATE_PYTHON_PYLINT: "false"

  codeql-analyze:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Initialize CodeQL
        uses: github/codeql-action/init@96f518a34f7a870018057716cc4d7a5c014bd61c # v3
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@96f518a34f7a870018057716cc4d7a5c014bd61c # v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@96f518a34f7a870018057716cc4d7a5c014bd61c # v3

  test-docker-images:
    name: Test Docker Images
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.13.6"
      - name: Set up Docker
        uses: docker/setup-docker-action@b60f85385d03ac8acfca6d9996982511d8620a19 # v4
      - name: Setup pipx
        run: |
          sudo apt update
          sudo apt install pipx
          pipx ensurepath
      - name: Setup Poetry
        run: pipx install poetry
      - name: Install Test Dependencies
        run: poetry sync
      - name: Validate Types in Tests
        run: poetry run mypy .
      - name: Run Tests
        run: poetry run pytest

  build-tools:
    name: Build Perf Evaluator
    runs-on: ubuntu-latest
    needs:
      - run-super-linter
      - codeql-analyze
      - test-docker-images
    strategy:
      matrix:
        package: ["test-service", "test-runner"]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          username: nadunrds
          password: ${{ secrets.docker_hub_token }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            GIT_REVISION=${{ github.sha }}
            PROJECT_PKG="github.com/${{ github.repository }}"
          file: docker/Dockerfile.${{ matrix.package }}
          push: true
          tags: nadunrds/k8s-node-perf-evaluator-${{ matrix.package }}:latest
