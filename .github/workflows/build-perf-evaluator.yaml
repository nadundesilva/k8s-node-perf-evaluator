name: Build

on: [push, pull_request]

jobs:
  lint-code-base:
    name: Lint Code Base
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run GitHub Suprtlinter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_GO: false
      - name: Run GoLang CI Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29

  codeql-analyze:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-tools:
    name: Build Perf Evaluator
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: ["test-service", "test-runner"]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            GIT_REVISION=${{ github.sha }}
            PROJECT_PKG="github.com/${{ github.repository }}"
          file: docker/Dockerfile.${{ matrix.package }}
          push: true
          tags: ghcr.io/nadundesilva/tools/k8s-node-perf-evaluator/${{ matrix.package }}:latest
